export TERM=xterm-256color

export LC_ALL="en_US.UTF-8"

export GOPATH=$HOME/src/go-external:$HOME/src/go

local extra_bin_paths
extra_bin_paths=(
  '/usr/local/opt/sphinx-doc/bin'
  '/usr/local/opt/gpg-agent/bin'
  '/usr/local/opt/python/libexec/bin'
  "$HOME/src/go/bin"
  "$HOME/src/go-external/bin"
  "$HOME/bin"
  "$HOME/local/bin"
  "$HOME/.local/bin"
  "$HOME/.cargo/bin"
)

for extra_path in $extra_bin_paths; do
  test -d "$extra_path" \
    && path=("$extra_path" $path)
done

export PATH

# Local configs
if [[ -s "${HOME}/.local/zshrc" ]]; then
  source "${HOME}/.local/zshrc"
fi

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Source chtf
if [[ -f ${HOMEBREW_ROOT:-/usr/local}/share/chtf/chtf.sh ]]; then
  source "${HOMEBREW_ROOT:-/usr/local}/share/chtf/chtf.sh"
fi

# source chruby
if [[ -f "/usr/local/opt/chruby/share/chruby/chruby.sh" ]]; then
  source /usr/local/opt/chruby/share/chruby/chruby.sh
fi

# instatiate gpg-agent
if ! pgrep -x -u "${USER}" gpg-agent >/dev/null 2>&1; then
  gpg-connect-agent /bye >/dev/null 2>&1
fi

# Source aws command-completion
if [[ -f "/usr/local/bin/aws_zsh_completer.sh" ]]; then
  source /usr/local/bin/aws_zsh_completer.sh
fi

# Aws mfa shell environment
if [[ -f "$HOME/src/own/aws/mfa" ]]; then
  function mfa() { eval "$($HOME/src/own/aws/mfa $1)" }
fi

# atlas-token environment
if [[ -f "$HOME/src/own/atlas-token/atlas-token" ]]; then
  function atlas-token() { eval "$($HOME/src/own/atlas-token/atlas-token)" }
fi

# direnv hook
if type direnv > /dev/null ; then
  eval "$(direnv hook zsh)"
fi

# alias for hub
if type hub > /dev/null ; then
  eval "$(hub alias -s)"
fi

# Alias for gopass
if type gopass > /dev/null ; then
  alias pass=gopass
fi

# go-jira completions
if type jira > /dev/null ; then
  eval "$(jira --completion-script-zsh)"
fi

# Iterm
if [[ -f "$HOME/.iterm2_shell_integration.zsh" ]]; then
  source "$HOME/.iterm2_shell_integration.zsh"
fi

# Run ztodo on entering directory
chpwd() { ztodo }

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
